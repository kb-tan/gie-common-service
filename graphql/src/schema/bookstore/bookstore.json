{
    "openapi": "3.0.3",
    "info": {
      "title": "Simple Book API",
      "description": "An API to manage book data.",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "http://api.example.com/v1"
      }
    ],
    "paths": {
      "/books": {
        "get": {
          "summary": "List all books",
          "operationId": "listBooks",
          "responses": {
            "200": {
              "description": "A list of books.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Book"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Add a new book",
          "operationId": "addBook",
          "requestBody": {
            "description": "Details of the book to be added",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBook"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Book created successfully.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      },
      "/books/{bookId}": {
        "get": {
          "summary": "Get a book",
          "operationId": "getBook",
          "parameters": [
            {
              "name": "bookId",
              "in": "path",
              "required": true,
              "description": "ID of the book to retrieve",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Details of the book.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            },
            "404": {
              "description": "Book not found"
            }
          }
        },
        "delete": {
          "summary": "Delete a book",
          "operationId": "deleteBook",
          "parameters": [
            {
              "name": "bookId",
              "in": "path",
              "required": true,
              "description": "ID of the book to delete",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Book deleted successfully"
            },
            "404": {
              "description": "Book not found"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Book": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "author": {
              "type": "string"
            },
            "publishedYear": {
              "type": "integer"
            }
          },
          "required": ["id", "title", "author"]
        },
        "NewBook": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "author": {
              "type": "string"
            },
            "publishedYear": {
              "type": "integer"
            }
          },
          "required": ["title", "author"]
        }
      }
    }
  }